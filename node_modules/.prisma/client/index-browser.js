
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  user_id: 'user_id',
  userName: 'userName',
  email: 'email',
  phoneNumber: 'phoneNumber',
  password: 'password',
  otp: 'otp',
  otpExpiry: 'otpExpiry'
};

exports.Prisma.TokenScalarFieldEnum = {
  token_id: 'token_id',
  refreshToken: 'refreshToken'
};

exports.Prisma.CategoryScalarFieldEnum = {
  category_id: 'category_id',
  category_name: 'category_name'
};

exports.Prisma.SubcategoryScalarFieldEnum = {
  subcategory_id: 'subcategory_id',
  subcategory_name: 'subcategory_name',
  category_id: 'category_id'
};

exports.Prisma.ProductScalarFieldEnum = {
  product_id: 'product_id',
  product_name: 'product_name',
  overallRating: 'overallRating',
  subcategory_id: 'subcategory_id'
};

exports.Prisma.ProductVariationScalarFieldEnum = {
  productVariation_id: 'productVariation_id',
  productVariation_image: 'productVariation_image',
  productVariation_price: 'productVariation_price',
  description: 'description',
  theme: 'theme',
  size: 'size',
  shipping_charges: 'shipping_charges',
  delivery_details: 'delivery_details',
  about: 'about',
  requirements1: 'requirements1',
  requirements2: 'requirements2',
  requirements3: 'requirements3',
  product_id: 'product_id'
};

exports.Prisma.ReviewScalarFieldEnum = {
  review_id: 'review_id',
  reviewer: 'reviewer',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt',
  isApproved: 'isApproved',
  product_id: 'product_id'
};

exports.Prisma.SessionScalarFieldEnum = {
  session_id: 'session_id',
  session_image: 'session_image',
  session_name: 'session_name',
  session_mode: 'session_mode',
  price: 'price',
  description: 'description',
  date: 'date',
  time: 'time',
  session_platform: 'session_platform',
  session_kit: 'session_kit'
};

exports.Prisma.SessiondescriptionScalarFieldEnum = {
  description_id: 'description_id',
  language: 'language',
  kit_info: 'kit_info',
  learn1: 'learn1',
  learn2: 'learn2',
  learn3: 'learn3',
  other_benefits_1: 'other_benefits_1',
  other_benefits_2: 'other_benefits_2',
  other_benefits_3: 'other_benefits_3',
  session_id: 'session_id'
};

exports.Prisma.ReviewsessionScalarFieldEnum = {
  reviewsession_id: 'reviewsession_id',
  reviewer: 'reviewer',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt',
  isApproved: 'isApproved',
  session_id: 'session_id'
};

exports.Prisma.TemporaryOrderScalarFieldEnum = {
  temporary_id: 'temporary_id',
  order_id: 'order_id',
  subcategoryName: 'subcategoryName',
  productName: 'productName',
  size: 'size',
  price: 'price',
  shipping_charges: 'shipping_charges',
  totalPrice: 'totalPrice',
  name: 'name',
  email: 'email',
  phoneNumber: 'phoneNumber',
  address1: 'address1',
  address2: 'address2',
  landmark: 'landmark',
  city: 'city',
  state: 'state',
  pincode: 'pincode',
  photo: 'photo',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.PermanentOrderScalarFieldEnum = {
  permanent_id: 'permanent_id',
  order_id: 'order_id',
  payment_id: 'payment_id',
  subcategoryName: 'subcategoryName',
  productName: 'productName',
  size: 'size',
  price: 'price',
  shipping_charges: 'shipping_charges',
  totalPrice: 'totalPrice',
  name: 'name',
  email: 'email',
  phoneNumber: 'phoneNumber',
  address1: 'address1',
  address2: 'address2',
  landmark: 'landmark',
  city: 'city',
  state: 'state',
  pincode: 'pincode',
  photo: 'photo',
  createdAt: 'createdAt'
};

exports.Prisma.TemporarySessionOrderScalarFieldEnum = {
  temporarySession_id: 'temporarySession_id',
  order_id: 'order_id',
  sessionName: 'sessionName',
  platform: 'platform',
  kit_info: 'kit_info',
  date: 'date',
  time: 'time',
  price: 'price',
  name: 'name',
  email: 'email',
  phoneNumber: 'phoneNumber',
  address1: 'address1',
  address2: 'address2',
  landmark: 'landmark',
  city: 'city',
  state: 'state',
  pincode: 'pincode',
  photo: 'photo',
  createdAt: 'createdAt'
};

exports.Prisma.PermanentSessionOrderScalarFieldEnum = {
  permanentSession_id: 'permanentSession_id',
  order_id: 'order_id',
  payment_id: 'payment_id',
  sessionName: 'sessionName',
  platform: 'platform',
  kit_info: 'kit_info',
  date: 'date',
  time: 'time',
  price: 'price',
  name: 'name',
  email: 'email',
  phoneNumber: 'phoneNumber',
  address1: 'address1',
  address2: 'address2',
  landmark: 'landmark',
  city: 'city',
  state: 'state',
  pincode: 'pincode',
  photo: 'photo',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Token: 'Token',
  Category: 'Category',
  Subcategory: 'Subcategory',
  Product: 'Product',
  ProductVariation: 'ProductVariation',
  Review: 'Review',
  Session: 'Session',
  Sessiondescription: 'Sessiondescription',
  Reviewsession: 'Reviewsession',
  TemporaryOrder: 'TemporaryOrder',
  PermanentOrder: 'PermanentOrder',
  TemporarySessionOrder: 'TemporarySessionOrder',
  PermanentSessionOrder: 'PermanentSessionOrder'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
