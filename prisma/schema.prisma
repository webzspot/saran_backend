datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

model User {
    user_id         String @id @unique @default(cuid())
    userName        String
    email           String @unique
    phoneNumber     String
    password        String
    otp             String?
   otpExpiry        DateTime? 
}

model Token {
    token_id        String @id @unique @default(cuid())
    refreshToken    String
}

model Category {
  category_id   String        @id @unique @default(cuid())
  category_name String
  subcategory   Subcategory[]
}

model Subcategory {
  subcategory_id   String    @id @unique @default(cuid())
  subcategory_name String
  category_id      String
  category         Category  @relation(fields: [category_id], references: [category_id], onDelete: Cascade)
  product          Product[]
}

model Product {
  product_id       String             @id @unique @default(cuid())
  product_name     String
  overallRating    String?
  subcategory_id   String
  subcategory      Subcategory        @relation(fields: [subcategory_id], references: [subcategory_id], onDelete: Cascade)
  productVariation ProductVariation[] 
  review           Review[]           
}

model ProductVariation {
  productVariation_id    String  @id @unique @default(cuid())
  productVariation_image String
  productVariation_price String
  description            String
  theme                  String
  size                   String
  shipping_charges        String
  delivery_details        String
  about                  String
  requirements           Json
  product_id             String
  product                Product @relation(fields: [product_id], references: [product_id],onDelete: Cascade)
}

model Review {
  review_id  String   @id @unique @default(cuid())
  reviewer   String
  rating     Int
  comment    String?
  createdAt  DateTime @default(now())
  isApproved Boolean  @default(false)
  product_id String   
  product Product @relation(fields:[product_id],references:[product_id], onDelete: Cascade)
}


model Session {
  session_id         String              @id @default(cuid())
  session_image      String
  session_name       String
  session_mode       String
  price              String
  description        String
  date               String
  time               String
  session_platform   String
  session_kit        String
  sessiondescription Sessiondescription?
  Reviewsession             Reviewsession[]
}

model Sessiondescription {
  description_id   String  @id @default(cuid())
  language         String
  kit_info         String
  learn1           String
  learn2           String
  learn3           String
  other_benefits_1 String
  other_benefits_2 String
  other_benefits_3 String
  session_id       String  @unique
  session          Session @relation(fields: [session_id], references: [session_id], onDelete:Cascade)
}

model Reviewsession {
  reviewsession_id  String   @id @unique @default(cuid())
  reviewer   String
  rating     Int
  comment    String?
  createdAt  DateTime @default(now())
  isApproved Boolean  @default(false)
  session_id String
  session    Session  @relation(fields: [session_id], references: [session_id], onDelete: Cascade)
}


model TemporaryOrder {
  temporary_id     String @unique  @id @default(cuid())
  order_id         String   @unique
  subcategoryName  String
  productName      String
  size             String
  price            String
  shipping_charges String
  totalPrice       String
  name             String
  email            String
  phoneNumber      String
  address1          String
  address2         String
  landmark         String
  city             String
  state            String
  pincode          String
  createdAt        DateTime @default(now())
  expiresAt        DateTime
}

model PermanentOrder {
  permanent_id     String   @unique   @id @default(cuid())
  order_id         String   @unique
  payment_id       String   @unique
  subcategoryName  String
  productName      String
  size             String
  price            String
  shipping_charges String
  totalPrice       String
  name             String
  email            String
  phoneNumber      String
  address1          String
  address2         String
  landmark         String
  city             String
  state            String
  pincode          String
  createdAt        DateTime @default(now())
}